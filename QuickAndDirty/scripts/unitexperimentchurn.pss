# -----------------------------------------------------------------------------
# Constants.
# -----------------------------------------------------------------------------

network.node SNNodeImpl
random.seed -1119980560846483977
simulation.cycles 200000
range.0=CHURN;0.00,0.01,0.05,0.1,0.2,0.4,0.5,0.7

SIZE 72303

# -----------------------------------------------------------------------------
# PeerSim boilerplate.
# -----------------------------------------------------------------------------

network.size SIZE
it.unitn.disi.registry contiguous

# -----------------------------------------------------------------------------
# Social network.
# -----------------------------------------------------------------------------

protocol.onehop GraphProtocol

# -----------------------------------------------------------------------------
# Social newscasting.
# -----------------------------------------------------------------------------

protocol.degreecentrality DegreeCentrality
{
	linkable onehop
}

protocol.snewscasting SocialNewscastingService
{
	social_neighborhood onehop 
	
	# Configurator.
	configurator DemersConfigurator
		
	linkable onehop
	chunk_size 5
	giveup_probability 1.0
	latency
}

protocol.executor ActionExecutor
{
	social_newscasting_service snewscasting
	neighborhood onehop
}

# -----------------------------------------------------------------------------
# Initializers.
# -----------------------------------------------------------------------------

init.generic GenericInitializer
{
	protocol snewscasting
}

init.onehopinit GraphProtocolInit
{
	protocol onehop
	file /home/giuliano/Graphs/Facebook.al
	representation array
}

init.nrinit NodeRegistryInit

include.init nrinit onehopinit generic

# -----------------------------------------------------------------------------
# Cycle-driven Action Scheduler
# -----------------------------------------------------------------------------
control.cdactscheduler CDActionScheduler
{
	executor executor
}

# -----------------------------------------------------------------------------
# Churn controller.
# -----------------------------------------------------------------------------

#control.churn FixedSizeNetwork
#{
#	dead_pool 0.4
#	churn_rate 0.01
#	one_hop onehop
#	social_newscasting_service snewscasting
#}

# -----------------------------------------------------------------------------
# Unit Experiment Governor.
# -----------------------------------------------------------------------------

control.governor DisseminationExperimentGovernor
{
	scheduler IntervalScheduler
	scheduler.idlist 3270,3270
#	scheduler DegreeClassScheduler
#	scheduler.linkable onehop
#	scheduler.includeNeighbors
	
	linkable onehop
	social_newscasting snewscasting
	executor executor
	repetitions 20
	degreeCutoff 0
	xchg_class it.unitn.disi.newscasting.internal.demers.DemersRumorMonger
	verbose
}