#!/bin/bash

################################################################################
#
# Syntax:  
# multi_average -t [tag] -s [start_delimiter] -e [end_delimiter] [repetitions] [stem]
#
################################################################################

. ${BASH_LIB}/common.lib

function print_help {
    err Syntax: $0 [options] [repetitions] [stem] [extensions]
    err
    err Options:
    err -e "   -t [tag]"
    err -e "   -p [tag separator] (to be used with -t)"
    err -e "   -s [start_delimiter]"
    err -e "   -e [end_delimiter] (to be used with -s)"
    exit 1
}

function check_set {
    if [ -z $2 ]
    then 
	err Mandatory argument $1 is missing. Type $0 -h for help.
	exit 1
    else
	err Parameter $1 is $2.
    fi
}

#=======================================
# Parses options. 
#=======================================

while getopts "t:s:e:p:h" o ; do  
    case $o in  
        t ) TAG=$OPTARG;;
        s ) START_DELIMITER=$OPTARG;;  
        e ) END_DELIMITER=$OPTARG;;
	p ) TAG_SEPARATOR=$OPTARG;;
	h ) 
	    print_help
	    ;;
	\?)
	    err "Type $0 -h for help." >&2
	    exit 1
	    ;;
	:)
	    err "Option -$OPTARG requires an argument. Type $0 -h for help." >&2
	    exit 1
	    ;;
    esac  
done

shift $((OPTIND-1))

check_set "repetitions" $1
check_set "stem" $2
check_set "extensions" $3

# Determines the mode to operate on.
if [ -n "${TAG+x}" ]
then 
    mode="tag"
fi

if [[ -n "${START_DELIMITER+x}" && -n "${END_DELIMITER+x}" ]]
then
    mode="delimiter"
fi

if [ -n "${mode+x}" ]
then
    : #NOP
else
    mode="raw"
fi

err Mode is $mode.

# Easier-on-the-eye aliases.
repetitions=$1
stem=$2
extensions=$3

#=======================================
# Performs the averaging.
#=======================================

for i in `seq 1 $repetitions`
do
    if [[ $mode = "raw" ]]
    then
	ucat $stem-$i.$extensions > ${stem}.b

    elif [[ $mode = "tag" ]]
    then
	err Run tag_extract.
	tag_extract $stem-$i.$extensions $TAG ${TAG_SEPARATOR:-""} > $stem.b

    elif [[ $mode = "delimiter" ]]
    then
	err Run extract.
	extract $stem-$i.$extensions $START_DELIMITER $END_DELIMITER > $stem.b
    fi

    # Note that step_average can only handle uncompressed files, so it's of
    # paramount importance that the above steps generate plain text files.
    step_average $stem $i
done

cat $stem.text
rm -rf $stem.text 
rm -rf $stem.b